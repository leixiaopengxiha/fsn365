{"ast":null,"code":"var _jsxFileName = \"/Users/leixiaopeng/Desktop/fsn365/pages/blocks/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport Nav from \"../nav\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport \"./blocks.less\";\nimport { blocksList } from \"../../api/blocks.js\"; // import dayjs from \"dayjs\"; // 处理时间\n// import \"dayjs/locale/zh-cn\"; // 实时动态转换（简体中文）\n// import relativeTime from \"dayjs/plugin/relativeTime\"; // 加载插件\n// dayjs.extend(relativeTime); // 使用插件\n\nconst columns = [{\n  id: \"height\",\n  label: \"Block\",\n  minWidth: 100,\n  color: \"#3499db\"\n}, {\n  id: \"timestamp\",\n  label: \"Age\",\n  minWidth: 100\n}, {\n  id: \"miner\",\n  label: \"Miner\",\n  minWidth: 170,\n  color: \"#3499db\"\n}, {\n  id: \"txns\",\n  label: \"Txn\",\n  minWidth: 100,\n  color: \"#3499db\"\n}, {\n  id: \"reward\",\n  label: \"Reward\",\n  minWidth: 170\n}];\n\nfunction createData(block, age, miner, txn, reward) {\n  return {\n    block,\n    age,\n    miner,\n    txn,\n    reward\n  };\n}\n\nexport default function Blocks() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [rows, setRows] = React.useState([]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    // 获取数据\n    const fetchData = async () => {\n      const result = await blocksList();\n      console.log(result.data.data);\n\n      if (result.data.data === undefined) {}\n\n      setRows(result.data.data);\n    };\n\n    fetchData();\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"table-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    style: {\n      padding: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Blocks\"), __jsx(Paper, {\n    className: \"root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, __jsx(TableContainer, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, __jsx(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }, columns.map(column => __jsx(TableCell, {\n    key: column.id,\n    align: \"center\",\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }\n  }, column.label)))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, console.log(rows), rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, columns.map(column => {\n      let value; // if (column.id == \"timestamp\") {\n      //   value = dayjs(row[column.id]).format(\n      //     \"YYYY-MM-DD HH:mm\"\n      //   );\n      // } else {\n\n      value = row[column.id]; // }\n\n      return __jsx(TableCell, {\n        key: column.id,\n        align: \"center\",\n        style: {\n          color: column.color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 31\n        }\n      }, column.id == \"reward\" ? `${row[column.id]} FSN` : value);\n    }));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/leixiaopeng/Desktop/fsn365/pages/blocks/index.js"],"names":["React","useEffect","Nav","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","blocksList","columns","id","label","minWidth","color","createData","block","age","miner","txn","reward","Blocks","page","setPage","useState","rowsPerPage","setRowsPerPage","rows","setRows","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","fetchData","result","console","log","data","undefined","padding","map","column","slice","row","index","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Nav from \"../nav\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport \"./blocks.less\";\nimport { blocksList } from \"../../api/blocks.js\";\n// import dayjs from \"dayjs\"; // 处理时间\n// import \"dayjs/locale/zh-cn\"; // 实时动态转换（简体中文）\n// import relativeTime from \"dayjs/plugin/relativeTime\"; // 加载插件\n\n// dayjs.extend(relativeTime); // 使用插件\n\nconst columns = [\n  { id: \"height\", label: \"Block\", minWidth: 100, color: \"#3499db\" },\n  { id: \"timestamp\", label: \"Age\", minWidth: 100 },\n  { id: \"miner\", label: \"Miner\", minWidth: 170, color: \"#3499db\" },\n  { id: \"txns\", label: \"Txn\", minWidth: 100, color: \"#3499db\" },\n  { id: \"reward\", label: \"Reward\", minWidth: 170 },\n];\n\nfunction createData(block, age, miner, txn, reward) {\n  return { block, age, miner, txn, reward };\n}\n\nexport default function Blocks() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [rows, setRows] = React.useState([]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    // 获取数据\n    const fetchData = async () => {\n      const result = await blocksList();\n      console.log(result.data.data);\n      if (result.data.data === undefined) {\n\n      }\n      setRows(result.data.data);\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <Nav />\n      <div className=\"main\">\n        <div className=\"table-box\">\n          <h3 style={{ padding: \"10px\" }}>Blocks</h3>\n          <Paper className=\"root\">\n            <TableContainer className=\"container\">\n              <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                  <TableRow>\n                    {columns.map((column) => (\n                      <TableCell\n                        key={column.id}\n                        align=\"center\"\n                        style={{ minWidth: column.minWidth }}\n                      >\n                        {column.label}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    console.log(rows)\n                  }\n                  {rows\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row, index) => {\n                      return (\n                        <TableRow\n                          hover\n                          role=\"checkbox\"\n                          tabIndex={-1}\n                          key={index}\n                        >\n                          {columns.map((column) => {\n                            let value;\n                            // if (column.id == \"timestamp\") {\n                            //   value = dayjs(row[column.id]).format(\n                            //     \"YYYY-MM-DD HH:mm\"\n                            //   );\n                            // } else {\n                            value = row[column.id];\n                            // }\n                            return (\n                              <TableCell\n                                key={column.id}\n                                align=\"center\"\n                                style={{ color: column.color }}\n                              >\n                                {column.id == \"reward\"\n                                  ? `${row[column.id]} FSN`\n                                  : value}\n                              </TableCell>\n                            );\n                          })}\n                        </TableRow>\n                      );\n                    })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <TablePagination\n              rowsPerPageOptions={[10, 25, 100]}\n              component=\"div\"\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n          </Paper>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}