{"ast":null,"code":"var _jsxFileName = \"/Users/fantaofan/Desktop/studio/fsn365/pages/blocks/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport Nav from \"../nav\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport \"./blocks.less\";\nimport { blocksList } from \"../../api/blocks.js\";\nconst columns = [{\n  id: \"block\",\n  label: \"Block\",\n  minWidth: 100,\n  align: \"center\"\n}, {\n  id: \"age\",\n  label: \"Age\",\n  minWidth: 100,\n  align: \"center\"\n}, {\n  id: \"miner\",\n  label: \"Miner\",\n  minWidth: 170,\n  align: \"center\" // format: (value) => value.toLocaleString(\"en-US\"),\n\n}, {\n  id: \"txn\",\n  label: \"Txn\",\n  minWidth: 100,\n  align: \"center\" // format: (value) => value.toLocaleString(\"en-US\"),\n\n}, {\n  id: \"reward\",\n  label: \"Reward\",\n  minWidth: 170,\n  align: \"center\"\n}];\n\nfunction createData(block, age, miner, txn, reward) {\n  return {\n    block,\n    age,\n    miner,\n    txn,\n    reward\n  };\n}\n\nconst rows = [createData(\"India\", \"IN\", 1324171354, 3287263), createData(\"China\", \"CN\", 1403500365, 9596961), createData(\"Italy\", \"IT\", 60483973, 301340), createData(\"United States\", \"US\", 327167434, 9833520), createData(\"Canada\", \"CA\", 37602103, 9984670), createData(\"Australia\", \"AU\", 25475400, 7692024), createData(\"Germany\", \"DE\", 83019200, 357578), createData(\"Ireland\", \"IE\", 4857000, 70273), createData(\"Mexico\", \"MX\", 126577691, 1972550), createData(\"Japan\", \"JP\", 126317000, 377973), createData(\"France\", \"FR\", 67022000, 640679), createData(\"United Kingdom\", \"GB\", 67545757, 242495), createData(\"Russia\", \"RU\", 146793744, 17098246), createData(\"Nigeria\", \"NG\", 200962417, 923768), createData(\"Brazil\", \"BR\", 210147125, 8515767)];\nexport default function Blocks() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [rows, setRows] = React.useState([]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    // 获取数据\n    const fetchData = async () => {\n      const result = await blocksList();\n      setRows(result.data.data);\n    };\n\n    fetchData();\n  }, []);\n  console.log(rows);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, __jsx(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"table-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    style: {\n      padding: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Blocks\"), __jsx(Paper, {\n    className: \"root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, __jsx(TableContainer, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, __jsx(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, columns.map(column => __jsx(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 23\n    }\n  }, column.label)))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return __jsx(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 31\n        }\n      }, column.format && typeof value === \"number\" ? column.format(value) : value);\n    }));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/fantaofan/Desktop/studio/fsn365/pages/blocks/index.js"],"names":["React","useEffect","Nav","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","blocksList","columns","id","label","minWidth","align","createData","block","age","miner","txn","reward","rows","Blocks","page","setPage","useState","rowsPerPage","setRowsPerPage","setRows","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","fetchData","result","data","console","log","padding","map","column","slice","row","index","format","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Nav from \"../nav\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport \"./blocks.less\";\nimport { blocksList } from \"../../api/blocks.js\";\n\nconst columns = [\n  { id: \"block\", label: \"Block\", minWidth: 100, align: \"center\" },\n  { id: \"age\", label: \"Age\", minWidth: 100, align: \"center\" },\n  {\n    id: \"miner\",\n    label: \"Miner\",\n    minWidth: 170,\n    align: \"center\",\n    // format: (value) => value.toLocaleString(\"en-US\"),\n  },\n  {\n    id: \"txn\",\n    label: \"Txn\",\n    minWidth: 100,\n    align: \"center\",\n    // format: (value) => value.toLocaleString(\"en-US\"),\n  },\n  {\n    id: \"reward\",\n    label: \"Reward\",\n    minWidth: 170,\n    align: \"center\",\n  },\n];\n\nfunction createData(block, age, miner, txn, reward) {\n  return { block, age, miner, txn, reward };\n}\n\nconst rows = [\n  createData(\"India\", \"IN\", 1324171354, 3287263),\n  createData(\"China\", \"CN\", 1403500365, 9596961),\n  createData(\"Italy\", \"IT\", 60483973, 301340),\n  createData(\"United States\", \"US\", 327167434, 9833520),\n  createData(\"Canada\", \"CA\", 37602103, 9984670),\n  createData(\"Australia\", \"AU\", 25475400, 7692024),\n  createData(\"Germany\", \"DE\", 83019200, 357578),\n  createData(\"Ireland\", \"IE\", 4857000, 70273),\n  createData(\"Mexico\", \"MX\", 126577691, 1972550),\n  createData(\"Japan\", \"JP\", 126317000, 377973),\n  createData(\"France\", \"FR\", 67022000, 640679),\n  createData(\"United Kingdom\", \"GB\", 67545757, 242495),\n  createData(\"Russia\", \"RU\", 146793744, 17098246),\n  createData(\"Nigeria\", \"NG\", 200962417, 923768),\n  createData(\"Brazil\", \"BR\", 210147125, 8515767),\n];\n\nexport default function Blocks() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [rows, setRows] = React.useState([]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    // 获取数据\n    const fetchData = async () => {\n      const result = await blocksList();\n      setRows(result.data.data);\n    };\n    fetchData();\n  }, []);\n  console.log(rows);\n\n  return (\n    <div>\n      <Nav />\n      <div className=\"main\">\n        <div className=\"table-box\">\n          <h3 style={{ padding: \"10px\" }}>Blocks</h3>\n          <Paper className=\"root\">\n            <TableContainer className=\"container\">\n              <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                  <TableRow>\n                    {columns.map((column) => (\n                      <TableCell\n                        key={column.id}\n                        align={column.align}\n                        style={{ minWidth: column.minWidth }}\n                      >\n                        {column.label}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rows\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row, index) => {\n                      return (\n                        <TableRow\n                          hover\n                          role=\"checkbox\"\n                          tabIndex={-1}\n                          key={index}\n                        >\n                          {columns.map((column) => {\n                            const value = row[column.id];\n                            return (\n                              <TableCell key={column.id} align={column.align}>\n                                {column.format && typeof value === \"number\"\n                                  ? column.format(value)\n                                  : value}\n                              </TableCell>\n                            );\n                          })}\n                        </TableRow>\n                      );\n                    })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <TablePagination\n              rowsPerPageOptions={[10, 25, 100]}\n              component=\"div\"\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n          </Paper>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}