{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/leixiaopeng/Desktop/fsn365/pages/address/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Nav from '../nav';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Bottom from '../bottom';\nimport { addressList } from '../../api';\nvar columns = [{\n  id: 'id',\n  label: 'Address'\n}, {\n  id: 'fsn',\n  label: 'FSN balance'\n}, {\n  id: 'fsnIn',\n  label: 'TL FSN',\n  align: 'right'\n}, {\n  id: 'fsnOwn',\n  label: 'FSN Ownership',\n  align: 'right'\n}];\n\nvar index = function index() {\n  _s();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(5),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      rows = _React$useState6[0],\n      setRows = _React$useState6[1];\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return addressList();\n\n              case 2:\n                result = _context.sent;\n                setRows(result.data.data); //   console.log(result.data.data)\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n  console.log(rows);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(Nav, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"transactionsn-contiar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"maiTransactionsn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"maiTransactionsn-head\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \" Fusion Address\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), __jsx(Paper, {\n    className: \"root\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Notice:We only list addresses that hold one or more FSN ownership at this page.\", __jsx(TableContainer, {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, __jsx(TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, __jsx(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 37\n    }\n  }, columns.map(function (column) {\n    return __jsx(TableCell, {\n      key: column.id,\n      align: column.align,\n      style: {\n        minWidth: column.minWidth\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 45\n      }\n    }, column.label);\n  }))), __jsx(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row, index) {\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: index,\n      calssname: \"hash\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 45\n      }\n    }, columns.map(function (column) {\n      var value = row[column.id];\n      return __jsx(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 57\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: [15, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  })))));\n};\n\n_s(index, \"w3tzdtWy2SLrhcaBeCPngfxibMs=\");\n\nexport default index;","map":{"version":3,"sources":["/Users/leixiaopeng/Desktop/fsn365/pages/address/index.js"],"names":["React","useEffect","Nav","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Bottom","addressList","columns","id","label","align","index","useState","page","setPage","rowsPerPage","setRowsPerPage","rows","setRows","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","fetchData","result","data","console","log","map","column","minWidth","slice","row","format","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport Nav from '../nav'\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Bottom from '../bottom';\n\nimport { addressList } from '../../api'\n\nconst columns = [\n    { id: 'id', label: 'Address' },\n    { id: 'fsn', label: 'FSN balance' },\n    {\n        id: 'fsnIn',\n        label: 'TL FSN',\n        align: 'right',\n    },\n    {\n        id: 'fsnOwn',\n        label: 'FSN Ownership',\n        align: 'right',\n    },\n\n];\n\nconst index = () => {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const [rows, setRows] = React.useState([])\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await addressList()\n            setRows(result.data.data);\n            //   console.log(result.data.data)\n        };\n\n        fetchData();\n    }, []);\n    console.log(rows)\n\n    return (\n        <div>\n            <Nav></Nav>\n            <div className=\"transactionsn-contiar\">\n\n                <div className='maiTransactionsn'>\n                    <div className='maiTransactionsn-head'>\n                        <span> Fusion Address</span>\n                    </div>\n                    <div>\n\n                    </div>\n\n                    <Paper className='root'>\n                        Notice:We only list addresses that hold one or more FSN ownership at this page.\n            <TableContainer className='container'>\n                            <Table stickyHeader aria-label=\"sticky table\">\n                                <TableHead>\n                                    <TableRow>\n                                        {columns.map((column) => (\n                                            <TableCell\n                                                key={column.id}\n                                                align={column.align}\n                                                style={{ minWidth: column.minWidth }}\n                                            >\n                                                {column.label}\n                                            </TableCell>\n                                        ))}\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n\n                                        return (\n                                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={index} calssname=\"hash\">\n                                                {columns.map((column) => {\n                                                    const value = row[column.id];\n                                                    return (\n                                                        <TableCell key={column.id} align={column.align}>\n                                                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                                                        </TableCell>\n                                                    );\n                                                })}\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                        <TablePagination\n                            rowsPerPageOptions={[15, 25, 100]}\n                            component=\"div\"\n                            count={rows.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                        />\n                    </Paper>\n                </div>\n            </div>\n\n        </div>\n\n    )\n\n}\n\nexport default index\n"]},"metadata":{},"sourceType":"module"}