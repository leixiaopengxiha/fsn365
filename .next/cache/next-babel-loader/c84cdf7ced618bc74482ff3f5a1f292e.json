{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u5DE5\\u4F5C\\u5BA4\\\\fsn365\\\\pages\\\\blocks\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport Nav from \"../nav\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport \"./blocks.less\";\nimport { getBlocks } from \"../../api\";\nimport Link from \"next/link\";\nimport Bottom from \"../bottom/index\";\nexport default function Blocks() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [rows, setRows] = React.useState([]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    // 获取数据\n    const fetchData = async () => {\n      const result = await getBlocks();\n\n      if (result.data.data === undefined) {\n        fetchData();\n        return;\n      }\n\n      setRows(result.data.data);\n    };\n\n    fetchData();\n  }, []);\n  const columns = [{\n    id: \"height\",\n    label: \"Block\",\n    minWidth: 100,\n    format: obj => __jsx(Link, {\n      href: `/blocks/${obj.height}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, obj.height))\n  }, {\n    id: \"timestamp\",\n    label: \"Age\",\n    minWidth: 100\n  }, {\n    id: \"miner\",\n    label: \"Miner\",\n    minWidth: 170,\n    format: obj => __jsx(Link, {\n      href: `/staking/${obj.miner}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, obj.miner))\n  }, {\n    id: \"txns\",\n    label: \"Txn\",\n    minWidth: 100,\n    format: obj => __jsx(Link, {\n      href: `txn?bk=${obj.height}&size=${obj.txns}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, obj.txns))\n  }, {\n    id: \"reward\",\n    label: \"Reward\",\n    minWidth: 170,\n    format: obj => `${obj.reward} FSN`\n  }];\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, __jsx(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"table-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    style: {\n      padding: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Blocks\"), __jsx(Paper, {\n    className: \"root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, __jsx(TableContainer, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, __jsx(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, columns.map(column => __jsx(TableCell, {\n    key: column.id,\n    align: \"center\",\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 23\n    }\n  }, column.label)))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    var obj = {\n      height: row.height,\n      miner: row.miner,\n      txns: row.txns,\n      reward: row.reward\n    };\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return __jsx(TableCell, {\n        key: column.id,\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 31\n        }\n      }, column.format ? column.format(obj) : value);\n    }));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  })))), __jsx(Bottom, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/工作室/fsn365/pages/blocks/index.js"],"names":["React","useEffect","Nav","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","getBlocks","Link","Bottom","Blocks","page","setPage","useState","rowsPerPage","setRowsPerPage","rows","setRows","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","fetchData","result","data","undefined","columns","id","label","minWidth","format","obj","height","miner","txns","reward","padding","map","column","slice","row","index","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Nav from \"../nav\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport \"./blocks.less\";\r\nimport { getBlocks } from \"../../api\";\r\nimport Link from \"next/link\";\r\nimport Bottom from \"../bottom/index\";\r\n\r\nexport default function Blocks() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [rows, setRows] = React.useState([]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 获取数据\r\n    const fetchData = async () => {\r\n      const result = await getBlocks();\r\n      if (result.data.data === undefined) {\r\n        fetchData();\r\n        return;\r\n      }\r\n      setRows(result.data.data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      id: \"height\",\r\n      label: \"Block\",\r\n      minWidth: 100,\r\n      format: (obj) => (\r\n        <Link href={`/blocks/${obj.height}`}>\r\n          <a>{obj.height}</a>\r\n        </Link>\r\n      ),\r\n    },\r\n    {\r\n      id: \"timestamp\",\r\n      label: \"Age\",\r\n      minWidth: 100,\r\n    },\r\n    {\r\n      id: \"miner\",\r\n      label: \"Miner\",\r\n      minWidth: 170,\r\n      format: (obj) => (\r\n        <Link href={`/staking/${obj.miner}`}>\r\n          <a>{obj.miner}</a>\r\n        </Link>\r\n      ),\r\n    },\r\n    {\r\n      id: \"txns\",\r\n      label: \"Txn\",\r\n      minWidth: 100,\r\n      format: (obj) => (\r\n        <Link href={`txn?bk=${obj.height}&size=${obj.txns}`}>\r\n          <a>{obj.txns}</a>\r\n        </Link>\r\n      ),\r\n    },\r\n    {\r\n      id: \"reward\",\r\n      label: \"Reward\",\r\n      minWidth: 170,\r\n      format: (obj) => `${obj.reward} FSN`,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <div className=\"main\">\r\n        <div className=\"table-box\">\r\n          <h3 style={{ padding: \"10px\" }}>Blocks</h3>\r\n          <Paper className=\"root\">\r\n            <TableContainer className=\"container\">\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align=\"center\"\r\n                        style={{ minWidth: column.minWidth }}\r\n                      >\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row, index) => {\r\n                      var obj = {\r\n                        height: row.height,\r\n                        miner: row.miner,\r\n                        txns: row.txns,\r\n                        reward: row.reward,\r\n                      };\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          role=\"checkbox\"\r\n                          tabIndex={-1}\r\n                          key={index}\r\n                        >\r\n                          {columns.map((column) => {\r\n                            const value = row[column.id];\r\n                            return (\r\n                              <TableCell key={column.id} align=\"center\">\r\n                                {column.format ? column.format(obj) : value}\r\n                              </TableCell>\r\n                            );\r\n                          })}\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n      <Bottom></Bottom>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}