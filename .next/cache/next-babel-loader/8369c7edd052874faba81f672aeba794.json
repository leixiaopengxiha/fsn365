{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/leixiaopeng/Desktop/fsn365/pages/assets/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Nav from '../nav';\nimport './assets.less';\nimport { getAssets } from '../../api';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nvar columns = [{\n  id: \"name\",\n  label: \"Asset\",\n  minWidth: 100,\n  color: \"#3499db\"\n}, {\n  id: \"id\",\n  label: \"Asset ID\",\n  minWidth: 100,\n  color: \"#3499db\"\n}, {\n  id: \"quantity\",\n  label: \"Quantity\",\n  minWidth: 170\n}];\n\nfunction TablePaginationActions(props) {\n  _s();\n\n  var theme = useTheme();\n  var count = props.count,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      onChangePage = props.onChangePage;\n\n  var handleFirstPageButtonClick = function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  };\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  var handleLastPageButtonClick = function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return __jsx(\"div\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"first page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, theme.direction === 'rtl' ? __jsx(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 46\n    }\n  }) : __jsx(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 65\n    }\n  })), __jsx(IconButton, {\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"previous page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, theme.direction === 'rtl' ? __jsx(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 46\n    }\n  }) : __jsx(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 71\n    }\n  })), __jsx(IconButton, {\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"next page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, theme.direction === 'rtl' ? __jsx(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 46\n    }\n  }) : __jsx(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 70\n    }\n  })), __jsx(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"last page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, theme.direction === 'rtl' ? __jsx(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 46\n    }\n  }) : __jsx(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 66\n    }\n  })));\n}\n\n_s(TablePaginationActions, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = TablePaginationActions;\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nfunction createData(asset, assetId, quantity) {\n  return {\n    asset: asset,\n    assetId: assetId,\n    quantity: quantity\n  };\n}\n\nexport default function index() {\n  _s2();\n\n  var _this = this;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(10),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      rows = _React$useState6[0],\n      setRows = _React$useState6[1];\n\n  var emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  var _useState = useState(null),\n      data = _useState[0],\n      setData = _useState[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getAssets();\n\n              case 2:\n                result = _context.sent;\n\n                if (!(result.data.data === undefined)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                fetchData();\n                return _context.abrupt(\"return\");\n\n              case 6:\n                setRows(result.data.data);\n                console.log(result.data.data);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"home-contiar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, __jsx(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"assets\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, \"Assets\")), __jsx(TableContainer, {\n    component: Paper,\n    className: \"assets-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, __jsx(Table, {\n    \"aria-label\": \"custom pagination table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, columns.map(function (column) {\n    return __jsx(TableCell, {\n      key: column.id,\n      align: \"center\",\n      style: {\n        minWidth: column.minWidth\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 41\n      }\n    }, column.label);\n  }))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row, index) {\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 45\n      }\n    }, columns.map(function (column) {\n      var value;\n      value = row[column.id];\n      return __jsx(TableCell, {\n        key: column.id,\n        align: \"center\",\n        style: {\n          color: column.color\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 57\n        }\n      }, column.id == \"quantity\" ? \"\".concat(row[column.id], \" \").concat(row.symbol, \"  \") : value);\n    }));\n  })), __jsx(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  }, __jsx(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, 50, 100],\n    colSpan: 3,\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      \"native\": true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    ActionsComponent: TablePaginationActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 37\n    }\n  }))))))));\n}\n\n_s2(index, \"B1SXgkKIFwHorMmbqT5aswKHi4Y=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TablePaginationActions\");","map":{"version":3,"sources":["/Users/leixiaopeng/Desktop/fsn365/pages/assets/index.js"],"names":["React","useState","useEffect","Nav","getAssets","PropTypes","makeStyles","useTheme","Table","TableBody","TableHead","TableCell","TableContainer","TableFooter","TablePagination","TableRow","Paper","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","columns","id","label","minWidth","color","TablePaginationActions","props","theme","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","direction","propTypes","number","isRequired","func","createData","asset","assetId","quantity","index","setPage","setRowsPerPage","rows","setRows","emptyRows","min","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","data","setData","fetchData","result","undefined","console","log","map","column","slice","row","symbol","inputProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Nav from '../nav'\nimport './assets.less'\nimport { getAssets } from '../../api'\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst columns = [\n    { id: \"name\", label: \"Asset\", minWidth: 100, color: \"#3499db\" },\n    { id: \"id\", label: \"Asset ID\", minWidth: 100, color: \"#3499db\" },\n    { id: \"quantity\", label: \"Quantity\", minWidth: 170 },\n];\n\nfunction TablePaginationActions(props) {\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onChangePage } = props;\n\n    const handleFirstPageButtonClick = (event) => {\n        onChangePage(event, 0);\n    };\n\n    const handleBackButtonClick = (event) => {\n        onChangePage(event, page - 1);\n    };\n\n    const handleNextButtonClick = (event) => {\n        onChangePage(event, page + 1);\n    };\n\n    const handleLastPageButtonClick = (event) => {\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n\n    return (\n        <div className='btn'>\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n                aria-label=\"first page\"\n            >\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n            </IconButton>\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"next page\"\n            >\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"last page\"\n            >\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n            </IconButton>\n        </div>\n    );\n}\n\nTablePaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(asset, assetId, quantity) {\n    return { asset, assetId, quantity };\n}\n\nexport default function index() {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [rows, setRows] = React.useState([]);\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n    const [data, setData] = useState(null)\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await getAssets()\n            if (result.data.data === undefined) {\n                fetchData()\n                return\n            }\n            setRows(result.data.data)\n            console.log(result.data.data)\n        };\n        fetchData();\n    }, []);\n    return (\n        <div>\n            <div className='home-contiar'>\n                <Nav></Nav>\n                <div className='assets'>\n                    <header>\n                        <h2>Assets</h2>\n                    </header>\n                    <TableContainer component={Paper} className='assets-table'>\n                        <Table aria-label=\"custom pagination table\">\n                            <TableHead>\n                                <TableRow>\n                                    {columns.map((column) => (\n                                        <TableCell\n                                            key={column.id}\n                                            align=\"center\"\n                                            style={{ minWidth: column.minWidth }}\n                                        >\n                                            {column.label}\n                                        </TableCell>\n                                    ))}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {rows\n                                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                    .map((row, index) => {\n\n                                        return (\n                                            <TableRow\n                                                hover\n                                                role=\"checkbox\"\n                                                tabIndex={-1}\n                                                key={index}\n                                            >\n                                                {columns.map((column) => {\n                                                    let value;\n                                                    value = row[column.id];\n                                                    return (\n                                                        <TableCell\n                                                            key={column.id}\n                                                            align=\"center\"\n                                                            style={{ color: column.color }}\n                                                        >\n                                                            {column.id == \"quantity\"\n                                                                ? `${row[column.id]} ${row.symbol}  `\n                                                                : value}\n                                                        </TableCell>\n                                                    );\n                                                })}\n                                            </TableRow>\n                                        );\n                                    })}\n                            </TableBody>\n                            <TableFooter>\n                                <TableRow>\n                                    <TablePagination\n                                        rowsPerPageOptions={[5, 10, 25, 50, 100]}\n                                        colSpan={3}\n                                        count={rows.length}\n                                        rowsPerPage={rowsPerPage}\n                                        page={page}\n                                        SelectProps={{\n                                            inputProps: { 'aria-label': 'rows per page' },\n                                            native: true,\n                                        }}\n                                        onChangePage={handleChangePage}\n                                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                                        ActionsComponent={TablePaginationActions}\n                                    />\n                                </TableRow>\n                            </TableFooter>\n                        </Table>\n                    </TableContainer>\n                </div>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}