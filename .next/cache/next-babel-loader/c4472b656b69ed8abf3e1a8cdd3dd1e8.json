{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u5DE5\\u4F5C\\u5BA4\\\\fsn365\\\\pages\\\\address\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Nav from '../nav';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Bottom from '../bottom';\nimport './addre.less';\nimport { addressList } from '../../api';\nconst columns = [{\n  id: 'id',\n  label: 'Address'\n}, {\n  id: 'fsn',\n  label: 'FSN balance'\n}, {\n  id: 'fsnIn',\n  label: 'TL FSN',\n  align: 'right'\n}, {\n  id: 'fsnOwn',\n  label: 'FSN Ownership',\n  align: 'right'\n}];\n\nconst index = () => {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [rows, setRows] = React.useState([]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await addressList();\n      setRows(result.data.data); //   console.log(result.data.data)\n    };\n\n    fetchData();\n  }, []);\n  console.log(rows);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"transactionsn-contiar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"maiTransactionsn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"maiTransactionsn-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \" Fusion Address\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), __jsx(Paper, {\n    className: \"root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Notice:We only list addresses that hold one or more FSN ownership at this page.\", __jsx(TableContainer, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 37\n    }\n  }, columns.map(column => __jsx(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 45\n    }\n  }, column.label)))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: index,\n      calssname: \"hash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 45\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return __jsx(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 57\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: [15, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  })))), __jsx(Bottom, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default index;","map":{"version":3,"sources":["D:/工作室/fsn365/pages/address/index.js"],"names":["React","useEffect","Nav","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Bottom","addressList","columns","id","label","align","index","page","setPage","useState","rowsPerPage","setRowsPerPage","rows","setRows","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","fetchData","result","data","console","log","map","column","minWidth","slice","row","format","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport Nav from '../nav'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Bottom from '../bottom';\r\nimport './addre.less'\r\nimport { addressList } from '../../api'\r\n\r\nconst columns = [\r\n    { id: 'id', label: 'Address' },\r\n    { id: 'fsn', label: 'FSN balance' },\r\n    {\r\n        id: 'fsnIn',\r\n        label: 'TL FSN',\r\n        align: 'right',\r\n    },\r\n    {\r\n        id: 'fsnOwn',\r\n        label: 'FSN Ownership',\r\n        align: 'right',\r\n    },\r\n\r\n];\r\n\r\nconst index = () => {\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [rows, setRows] = React.useState([])\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await addressList()\r\n            setRows(result.data.data);\r\n            //   console.log(result.data.data)\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n    console.log(rows)\r\n\r\n    return (\r\n        <div>\r\n            <Nav></Nav>\r\n            <div className=\"transactionsn-contiar\">\r\n\r\n                <div className='maiTransactionsn'>\r\n                    <div className='maiTransactionsn-head'>\r\n                        <span> Fusion Address</span>\r\n                    </div>\r\n                    <div>\r\n\r\n                    </div>\r\n\r\n                    <Paper className='root'>\r\n                        Notice:We only list addresses that hold one or more FSN ownership at this page.\r\n            <TableContainer className='container'>\r\n                            <Table stickyHeader aria-label=\"sticky table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        {columns.map((column) => (\r\n                                            <TableCell\r\n                                                key={column.id}\r\n                                                align={column.align}\r\n                                                style={{ minWidth: column.minWidth }}\r\n                                            >\r\n                                                {column.label}\r\n                                            </TableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n\r\n                                        return (\r\n                                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={index} calssname=\"hash\">\r\n                                                {columns.map((column) => {\r\n                                                    const value = row[column.id];\r\n                                                    return (\r\n                                                        <TableCell key={column.id} align={column.align}>\r\n                                                            {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                                        </TableCell>\r\n                                                    );\r\n                                                })}\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[15, 25, 100]}\r\n                            component=\"div\"\r\n                            count={rows.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onChangePage={handleChangePage}\r\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                        />\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n            <Bottom></Bottom>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default index\r\n"]},"metadata":{},"sourceType":"module"}