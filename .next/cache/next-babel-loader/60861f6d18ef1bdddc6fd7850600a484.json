{"ast":null,"code":"var _jsxFileName = \"/Users/leixiaopeng/Desktop/fsn365/pages/transactions/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Nav from '../nav';\nimport Bottom from '../bottom';\nimport './transactionsn.less';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { transactionsList } from '../../api';\nconst columns = [{\n  id: 'hash',\n  label: 'Tx Hash'\n}, {\n  id: 'timestamp',\n  label: 'Time'\n}, {\n  id: 'bk',\n  label: 'Block',\n  align: 'right'\n}, {\n  id: 'to',\n  label: 'From',\n  align: 'right'\n}, {\n  id: 'size2',\n  label: 'Direction',\n  align: 'right'\n}, {\n  id: 'to',\n  label: 'To',\n  align: 'right'\n}, {\n  id: 'type',\n  label: 'Tx Type',\n  align: 'right'\n}, {\n  id: 'info',\n  label: 'Info',\n  align: 'center',\n  maxWidth: 150\n}];\n\nconst index = () => {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [rows, setRows] = React.useState([]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await transactionsList();\n      setRows(result.data.data);\n      console.log(result.data.data);\n    };\n\n    fetchData();\n  }, []);\n  console.log(rows);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"transactionsn-contiar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, __jsx(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"maiTransactionsn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"maiTransactionsn-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Transactions\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), __jsx(Paper, {\n    className: \"root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, __jsx(TableContainer, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, __jsx(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, columns.map((column, index) => __jsx(TableCell, {\n    key: `${index}sss`,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 23\n    }\n  }, column.label)))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    console.log(index);\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"dexcheckbox\",\n      tabIn: -1,\n      key: index,\n      calssname: \"hash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 23\n      }\n    }, columns.map(column => {\n      let value;\n\n      if (column.id == 'info') {\n        value = `${row[column.id].value} FSN`;\n        console.log(row[column.id].value);\n      } else {\n        value = row[column.id];\n      }\n\n      return __jsx(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }\n      }, value);\n    }));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: [15, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  })))), __jsx(Bottom, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default index;","map":{"version":3,"sources":["/Users/leixiaopeng/Desktop/fsn365/pages/transactions/index.js"],"names":["React","useEffect","Nav","Bottom","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","transactionsList","columns","id","label","align","maxWidth","index","page","setPage","useState","rowsPerPage","setRowsPerPage","rows","setRows","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","fetchData","result","data","console","log","map","column","minWidth","slice","row","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport Nav from '../nav'\nimport Bottom from '../bottom'\nimport './transactionsn.less'\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { transactionsList } from '../../api'\n\n\n\nconst columns = [\n  { id: 'hash', label: 'Tx Hash' },\n  { id: 'timestamp', label: 'Time' },\n  {\n    id: 'bk',\n    label: 'Block',\n    align: 'right',\n  },\n  {\n    id: 'to',\n    label: 'From',\n    align: 'right',\n  },\n  {\n    id: 'size2',\n    label: 'Direction',\n    align: 'right',\n  },\n  {\n    id: 'to',\n    label: 'To',\n    align: 'right',\n  },\n  {\n    id: 'type',\n    label: 'Tx Type',\n    align: 'right',\n  },\n  {\n    id: 'info',\n    label: 'Info',\n    align: 'center',\n    maxWidth: 150\n  },\n];\n\n\n\n\nconst index = () => {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [rows, setRows] = React.useState([])\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await transactionsList()\n      setRows(result.data.data);\n      console.log(result.data.data)\n    };\n\n    fetchData();\n  }, []);\n  console.log(rows)\n\n  return (\n    <div>\n      <div className=\"transactionsn-contiar\">\n        <Nav></Nav>\n        <div className='maiTransactionsn'>\n          <div className='maiTransactionsn-head'>\n            <span>Transactions</span>\n          </div>\n          <div>\n\n          </div>\n\n          <Paper className='root'>\n            <TableContainer className='container'>\n              <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                  <TableRow>\n                    {columns.map((column, index) => (\n                      <TableCell\n                        key={`${index}sss`}\n                        align={column.align}\n                        style={{ minWidth: column.minWidth }}\n                      >\n                        {column.label}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n                    console.log(index)\n                    return (\n                      <TableRow hover role=\"dexcheckbox\" tabIn={-1} key={index} calssname=\"hash\">\n                        {columns.map((column) => {\n                          let value;\n                          if (column.id == 'info') {\n                            value = `${row[column.id].value} FSN`;\n                            console.log(row[column.id].value)\n                          } else {\n                            value = row[column.id];\n\n                          }\n                          return (\n                            <TableCell key={column.id} align={column.align}>\n                              {value}\n                            </TableCell>\n                          );\n                        })}\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <TablePagination\n              rowsPerPageOptions={[15, 25, 100]}\n              component=\"div\"\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n          </Paper>\n        </div>\n      </div>\n      <Bottom></Bottom>\n\n    </div>\n\n  )\n\n}\n\nexport default index\n"]},"metadata":{},"sourceType":"module"}