{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\\\u5DE5\\u4F5C\\u5BA4\\\\fsn365\\\\pages\\\\assets\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Nav from '../nav';\nimport './assets.less';\nimport { getAssets } from '../../api';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nfunction TablePaginationActions(props) {\n  _s();\n\n  var theme = useTheme();\n  var count = props.count,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      onChangePage = props.onChangePage;\n\n  var handleFirstPageButtonClick = function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  };\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  var handleLastPageButtonClick = function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return __jsx(\"div\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"first page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, theme.direction === 'rtl' ? __jsx(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 46\n    }\n  }) : __jsx(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 65\n    }\n  })), __jsx(IconButton, {\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"previous page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, theme.direction === 'rtl' ? __jsx(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 46\n    }\n  }) : __jsx(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 71\n    }\n  })), __jsx(IconButton, {\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"next page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, theme.direction === 'rtl' ? __jsx(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 46\n    }\n  }) : __jsx(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 70\n    }\n  })), __jsx(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"last page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, theme.direction === 'rtl' ? __jsx(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 46\n    }\n  }) : __jsx(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 66\n    }\n  })));\n}\n\n_s(TablePaginationActions, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = TablePaginationActions;\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nfunction createData(name, calories, fat) {\n  return {\n    name: name,\n    calories: calories,\n    fat: fat\n  };\n}\n\nvar rows = [createData('Cupcake', 305, 3.7), createData('Donut', 452, 25.0), createData('Eclair', 262, 16.0), createData('Frozen yoghurt', 159, 6.0), createData('Gingerbread', 356, 16.0), createData('Honeycomb', 408, 3.2), createData('Ice cream sandwich', 237, 9.0), createData('Jelly Bean', 375, 0.0), createData('KitKat', 518, 26.0), createData('Lollipop', 392, 0.2), createData('Marshmallow', 318, 0), createData('Nougat', 360, 19.0), createData('Oreo', 437, 18.0)].sort(function (a, b) {\n  return a.calories < b.calories ? -1 : 1;\n}); // const useStyles2 = makeStyles({\n//     table: {\n//         minWidth: 500,\n//     },\n// });\n\nexport default function index() {\n  _s2();\n\n  var _this = this;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(10),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1];\n\n  var emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  var _useState = useState(null),\n      data = _useState[0],\n      setData = _useState[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getAssets();\n\n              case 2:\n                result = _context.sent;\n\n                if (!(result.data.data === undefined)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                fetchData();\n                return _context.abrupt(\"return\");\n\n              case 6:\n                setData(result.data.data);\n                console.log(result.data.data);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"home-contiar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, __jsx(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"assets\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }, \"Assets\")), __jsx(TableContainer, {\n    component: Paper,\n    className: \"assets-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, __jsx(Table, {\n    \"aria-label\": \"custom pagination table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }, __jsx(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 37\n    }\n  }, __jsx(\"strong\", {\n    className: \"sum\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 63\n    }\n  }, \"Asset\")), __jsx(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 37\n    }\n  }, __jsx(\"strong\", {\n    className: \"sum\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 63\n    }\n  }, \"Asset ID\")), __jsx(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 37\n    }\n  }, __jsx(\"strong\", {\n    className: \"sum\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 63\n    }\n  }, \"Quantity\")))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, (rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(function (row) {\n    return __jsx(TableRow, {\n      key: row.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 37\n      }\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 41\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 45\n      }\n    }, row.name)), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 41\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 45\n      }\n    }, row.calories)), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 41\n      }\n    }, row.fat));\n  }), emptyRows > 0 && __jsx(TableRow, {\n    style: {\n      height: 53 * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 37\n    }\n  }, __jsx(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 41\n    }\n  }))), __jsx(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 29\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 33\n    }\n  }, __jsx(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, 50, 100],\n    colSpan: 3,\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      \"native\": true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    ActionsComponent: TablePaginationActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 37\n    }\n  }))))))));\n}\n\n_s2(index, \"t+Yn4QxmORku8icSHJbB0OCvMaU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TablePaginationActions\");","map":{"version":3,"sources":["D:/工作室/fsn365/pages/assets/index.js"],"names":["React","useState","useEffect","Nav","getAssets","PropTypes","makeStyles","useTheme","Table","TableBody","TableHead","TableCell","TableContainer","TableFooter","TablePagination","TableRow","Paper","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","TablePaginationActions","props","theme","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","direction","propTypes","number","isRequired","func","createData","name","calories","fat","rows","sort","a","b","index","setPage","setRowsPerPage","emptyRows","min","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","data","setData","fetchData","result","undefined","console","log","slice","map","row","height","inputProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Nav from '../nav'\r\nimport './assets.less'\r\nimport { getAssets } from '../../api'\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\n\r\n\r\nfunction TablePaginationActions(props) {\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n    const handleFirstPageButtonClick = (event) => {\r\n        onChangePage(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event) => {\r\n        onChangePage(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event) => {\r\n        onChangePage(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event) => {\r\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <div className='btn'>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n            </IconButton>\r\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n    return { name, calories, fat };\r\n}\r\n\r\nconst rows = [\r\n    createData('Cupcake', 305, 3.7),\r\n    createData('Donut', 452, 25.0),\r\n    createData('Eclair', 262, 16.0),\r\n    createData('Frozen yoghurt', 159, 6.0),\r\n    createData('Gingerbread', 356, 16.0),\r\n    createData('Honeycomb', 408, 3.2),\r\n    createData('Ice cream sandwich', 237, 9.0),\r\n    createData('Jelly Bean', 375, 0.0),\r\n    createData('KitKat', 518, 26.0),\r\n    createData('Lollipop', 392, 0.2),\r\n    createData('Marshmallow', 318, 0),\r\n    createData('Nougat', 360, 19.0),\r\n    createData('Oreo', 437, 18.0),\r\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\n// const useStyles2 = makeStyles({\r\n//     table: {\r\n//         minWidth: 500,\r\n//     },\r\n// });\r\n\r\n\r\nexport default function index() {\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const [data, setData] = useState(null)\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await getAssets()\r\n\r\n            if (result.data.data === undefined) {\r\n                fetchData()\r\n                return\r\n            }\r\n            setData(result.data.data)\r\n            console.log(result.data.data)\r\n        };\r\n        fetchData();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <div className='home-contiar'>\r\n                <Nav></Nav>\r\n                <div className='assets'>\r\n                    <header>\r\n                        <h2>Assets</h2>\r\n                    </header>\r\n                    <TableContainer component={Paper} className='assets-table'>\r\n                        <Table aria-label=\"custom pagination table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\"><strong className='sum'>Asset</strong></TableCell>\r\n                                    <TableCell align=\"center\"><strong className='sum'>Asset ID</strong></TableCell>\r\n                                    <TableCell align=\"center\"><strong className='sum'>Quantity</strong></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {(rowsPerPage > 0\r\n                                    ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                    : rows\r\n                                ).map((row) => (\r\n                                    <TableRow key={row.name}>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                            <a>{row.name}</a>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <a>{row.calories}</a>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {row.fat}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n\r\n                                {emptyRows > 0 && (\r\n                                    <TableRow style={{ height: 53 * emptyRows }}>\r\n                                        <TableCell colSpan={6} />\r\n                                    </TableRow>\r\n                                )}\r\n                            </TableBody>\r\n                            <TableFooter>\r\n                                <TableRow>\r\n                                    <TablePagination\r\n                                        rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n                                        colSpan={3}\r\n                                        count={rows.length}\r\n                                        rowsPerPage={rowsPerPage}\r\n                                        page={page}\r\n                                        SelectProps={{\r\n                                            inputProps: { 'aria-label': 'rows per page' },\r\n                                            native: true,\r\n                                        }}\r\n                                        onChangePage={handleChangePage}\r\n                                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                        ActionsComponent={TablePaginationActions}\r\n                                    />\r\n                                </TableRow>\r\n                            </TableFooter>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}