{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/fantaofan/Desktop/studio/fsn365/pages/blocks/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport Nav from \"../nav\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport \"./blocks.less\";\nimport { getBlocks } from \"../../api\";\nimport Link from \"next/link\";\nimport Bottom from \"../bottom/index\";\nexport default function Blocks() {\n  _s();\n\n  var _this = this;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(10),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      rows = _React$useState6[0],\n      setRows = _React$useState6[1];\n\n  var _React$useState7 = React.useState(null),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      datetime = _React$useState8[0],\n      setDatetime = _React$useState8[1]; // const times = new Date().getTime();\n  // setDatetime(times);\n\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(function () {\n    // 获取数据\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getBlocks();\n\n              case 2:\n                result = _context.sent;\n\n                if (!(result.data.data === undefined)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                fetchData();\n                return _context.abrupt(\"return\");\n\n              case 6:\n                setRows(result.data.data);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n  var columns = [{\n    id: \"height\",\n    label: \"Block\",\n    minWidth: 100,\n    format: function format(obj) {\n      return __jsx(Link, {\n        href: \"/blocks/\".concat(obj.height),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, obj.height));\n    }\n  }, {\n    id: \"timestamp\",\n    label: \"Age\",\n    minWidth: 100 // format: (obj) =>\n    //   `${Math.ceil(\n    //     (datetime - obj.timestamp * 1000) / (60 * 60 * 24 * 1000)\n    //   )} day ago`,\n\n  }, {\n    id: \"miner\",\n    label: \"Miner\",\n    minWidth: 170,\n    format: function format(obj) {\n      return __jsx(Link, {\n        href: \"/staking/\".concat(obj.miner),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, obj.miner));\n    }\n  }, {\n    id: \"txns\",\n    label: \"Txn\",\n    minWidth: 100,\n    format: function format(obj) {\n      return __jsx(Link, {\n        href: \"txn?bk=\".concat(obj.height, \"&size=\").concat(obj.txns),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, obj.txns));\n    }\n  }, {\n    id: \"reward\",\n    label: \"Reward\",\n    minWidth: 170,\n    format: function format(obj) {\n      return \"\".concat(obj.reward, \" FSN\");\n    }\n  }];\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, __jsx(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"table-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    style: {\n      padding: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Blocks\"), __jsx(Paper, {\n    className: \"root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, __jsx(TableContainer, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, __jsx(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, columns.map(function (column) {\n    return __jsx(TableCell, {\n      key: column.id,\n      align: \"center\",\n      style: {\n        minWidth: column.minWidth\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 23\n      }\n    }, column.label);\n  }))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row, index) {\n    var obj = {\n      height: row.height,\n      miner: row.miner,\n      txns: row.txns,\n      reward: row.reward,\n      timestamp: row.timestamp\n    };\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, columns.map(function (column) {\n      var value = row[column.id];\n      return __jsx(TableCell, {\n        key: column.id,\n        align: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 31\n        }\n      }, column.format ? column.format(obj) : value);\n    }));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  })))), __jsx(Bottom, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(Blocks, \"CN25C4ji8NSwXnG4X/QSKw7w1oI=\");\n\n_c = Blocks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blocks\");","map":{"version":3,"sources":["/Users/fantaofan/Desktop/studio/fsn365/pages/blocks/index.js"],"names":["React","useEffect","Nav","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","getBlocks","Link","Bottom","Blocks","useState","page","setPage","rowsPerPage","setRowsPerPage","rows","setRows","datetime","setDatetime","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","fetchData","result","data","undefined","columns","id","label","minWidth","format","obj","height","miner","txns","reward","padding","map","column","slice","row","index","timestamp","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Nav from \"../nav\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport \"./blocks.less\";\nimport { getBlocks } from \"../../api\";\nimport Link from \"next/link\";\nimport Bottom from \"../bottom/index\";\n\nexport default function Blocks() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [rows, setRows] = React.useState([]);\n  const [datetime, setDatetime] = React.useState(null);\n\n  // const times = new Date().getTime();\n  // setDatetime(times);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    // 获取数据\n    const fetchData = async () => {\n      const result = await getBlocks();\n      if (result.data.data === undefined) {\n        fetchData();\n        return;\n      }\n      setRows(result.data.data);\n    };\n    fetchData();\n  }, []);\n\n  const columns = [\n    {\n      id: \"height\",\n      label: \"Block\",\n      minWidth: 100,\n      format: (obj) => (\n        <Link href={`/blocks/${obj.height}`}>\n          <a>{obj.height}</a>\n        </Link>\n      ),\n    },\n    {\n      id: \"timestamp\",\n      label: \"Age\",\n      minWidth: 100,\n      // format: (obj) =>\n      //   `${Math.ceil(\n      //     (datetime - obj.timestamp * 1000) / (60 * 60 * 24 * 1000)\n      //   )} day ago`,\n    },\n    {\n      id: \"miner\",\n      label: \"Miner\",\n      minWidth: 170,\n      format: (obj) => (\n        <Link href={`/staking/${obj.miner}`}>\n          <a>{obj.miner}</a>\n        </Link>\n      ),\n    },\n    {\n      id: \"txns\",\n      label: \"Txn\",\n      minWidth: 100,\n      format: (obj) => (\n        <Link href={`txn?bk=${obj.height}&size=${obj.txns}`}>\n          <a>{obj.txns}</a>\n        </Link>\n      ),\n    },\n    {\n      id: \"reward\",\n      label: \"Reward\",\n      minWidth: 170,\n      format: (obj) => `${obj.reward} FSN`,\n    },\n  ];\n\n  return (\n    <div>\n      <Nav />\n      <div className=\"main\">\n        <div className=\"table-box\">\n          <h3 style={{ padding: \"10px\" }}>Blocks</h3>\n          <Paper className=\"root\">\n            <TableContainer className=\"container\">\n              <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                  <TableRow>\n                    {columns.map((column) => (\n                      <TableCell\n                        key={column.id}\n                        align=\"center\"\n                        style={{ minWidth: column.minWidth }}\n                      >\n                        {column.label}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rows\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row, index) => {\n                      var obj = {\n                        height: row.height,\n                        miner: row.miner,\n                        txns: row.txns,\n                        reward: row.reward,\n                        timestamp: row.timestamp,\n                      };\n                      return (\n                        <TableRow\n                          hover\n                          role=\"checkbox\"\n                          tabIndex={-1}\n                          key={index}\n                        >\n                          {columns.map((column) => {\n                            const value = row[column.id];\n                            return (\n                              <TableCell key={column.id} align=\"center\">\n                                {column.format ? column.format(obj) : value}\n                              </TableCell>\n                            );\n                          })}\n                        </TableRow>\n                      );\n                    })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <TablePagination\n              rowsPerPageOptions={[10, 25, 100]}\n              component=\"div\"\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n          </Paper>\n        </div>\n      </div>\n      <Bottom></Bottom>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}